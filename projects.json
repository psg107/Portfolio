[
  {
    "name": "패키지 예약 시뮬레이팅",
    "description": {
      "summary": "기존 수동 엑셀 계산으로 진행되던 패키지 상품 수익성 분석을 자동화하여 실시간 의사결정을 지원하는 시스템을 구축했습니다. 다양한 시나리오를 빠르게 비교 분석할 수 있어 가격 책정과 출발 확정 판단이 수월해졌습니다.",
      "highlights": [
        "Redis 캐시를 활용한 반복 계산 성능 최적화",
        "동일 출발일 예약 데이터 통합 분석 및 마진 자동 계산",
        "임의 예약 추가/가격 조정에 따른 수익 변동 시뮬레이션 기능",
        "출발 확정/취소 자동 판단 로직 구현",
        "다양한 시나리오 비교 분석 기능"
      ]
    },
    "from": "2025.05",
    "to": "2025.05",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "RestAPI",
      "TypeScript",
      "React",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 홈쇼핑 관리",
    "description": {
      "summary": "홈쇼핑 채널 전용 여행 상품 관리 및 예약 시스템을 구축했습니다. 고객 명단 등록부터 알림톡 발송, 재고 선점을 통한 예약 처리까지 홈쇼핑 특화 프로세스를 지원하여 고객 응대 품질을 향상시켰습니다.",
      "highlights": [
        "Amazon SQS 비동기 처리를 통한 알림톡 발송 자동화",
        "MongoDB 기반 재고 선점으로 동시 예약 처리",
        "카카오 알림톡 API 연동을 통한 고객 안내 자동화",
        "홈쇼핑 방송 관리 및 고객명단 일괄 등록 기능",
        "비회원 인증 기반 간편 예약 프로세스",
        "홈쇼핑 전용 가격/특전 정책 관리 시스템"
      ]
    },
    "from": "2025.03",
    "to": "2025.04",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "Amazon SQS",
      "RestAPI",
      "TypeScript",
      "React",
      "Kakao API",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 공급사 연동 서비스",
    "description": {
      "summary": "구패키지에서 신규패키지로 시스템 전환하면서 외부 공급사와의 상품 연동이 필요해져 새롭게 구축한 마이크로서비스입니다. 새벽 배치와 실시간 체크를 통한 동기화 방식을 구현했습니다.",
      "highlights": [
        "Amazon SQS를 활용한 대용량 상품 데이터 비동기 처리",
        "AWS Scheduled Task로 일배치 상품 동기화 자동화",
        "실시간 변경사항 체크 및 SQS 메시지 발행",
        "Redis를 활용한 API 호출 결과 캐싱 및 중복 요청 방지",
        "공급사별 상이한 API 형태의 표준화 처리",
        "실시간 API 연동과 일배치 프로세스 이중화 구조"
      ]
    },
    "from": "2024.10",
    "to": "2024.11",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "AWS Scheduled Task",
      "Amazon SQS",
      "RestAPI",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 통합 검색/전시 서비스",
    "images": ["1.png", "2.png"],
    "description": {
      "summary": "구패키지와 신규패키지를 동시 운영하면서 양쪽 상품을 통합 검색할 수 있는 허브 서비스를 새롭게 개발했습니다. 사내 검색 엔진을 활용하여 분산된 패키지 상품들을 하나의 허브에서 검색할 수 있도록 구현했습니다.",
      "highlights": [
        "Elasticsearch 기반 사내 검색 엔진(Andor) 연동",
        "MongoDB 집계 파이프라인을 통한 상품 추천 점수 계산",
        "Redis 캐시를 활용한 인기 검색어 및 필터 조건 최적화",
        "대용량 동시 검색 요청 처리를 위한 비동기 아키텍처",
        "검색엔진 점수와 상품 점수를 조합한 정렬 구현",
        "실시간 상품 데이터 동기화 및 인덱싱"
      ]
    },
    "from": "2024.06",
    "to": "2024.11",
    "type": "company",
    "companyName": "noluniverse",
    "link": "https://travel.interpark.com/package-search",
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "Elasticsearch",
      "RestAPI",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 예약 서비스",
    "images": ["4.png", "5.png"],
    "description": {
      "summary": "기존 수동으로 처리되던 예약 관리 프로세스를 자동화하여 운영 업무 효율성을 개선했습니다. 예약금 계산부터 출발 확정까지 모든 과정이 자동화되어 고객 응대 품질이 향상되고 결제 및 정산 업무가 자동화되었습니다.",
      "highlights": [
        "Amazon SQS와 Application Event를 활용한 이벤트 기반 아키텍처",
        "MongoDB를 이용한 예약 상태 실시간 추적 및 관리",
        "외부 결제/정산 서비스와의 REST API 연동",
        "예약금 계산 및 출발 확정 로직 자동화",
        "최소 출발 인원 체크 및 출발 확정 자동 변경",
        "SQS 기반 비동기 이벤트 처리"
      ]
    },
    "from": "2023.10",
    "to": "2024.05",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "Amazon SQS",
      "AWS Kinesis",
      "RestAPI",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 상품 서비스",
    "images": ["3.png"],
    "description": {
      "summary": "기존 고정 패키지 구성을 유연한 모듈형으로 전환하기 위해 항공, 호텔, 투어를 독립적으로 관리하고 자유롭게 조합할 수 있는 상품 시스템을 구축했습니다. 고객 선택권을 확대하고 외부 랜드사 직접 등록으로 상품 소싱을 다각화했습니다.",
      "highlights": [
        "Amazon SQS와 AWS Kinesis를 활용한 상품 변경 이벤트 스트리밍",
        "MongoDB를 활용한 상품 정보 관리",
        "Redis를 이용한 상품 조합 캐시 및 빠른 조회 성능 확보",
        "외부 랜드사 API 연동 구현",
        "항공, 호텔, 투어 독립 등록 및 자유로운 조합 기능",
        "확장 가능한 마이크로서비스 아키텍처"
      ]
    },
    "from": "2023.08",
    "to": "2024.05",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Kotlin",
      "SpringBoot",
      "MongoDB",
      "Redis",
      "AWS ECS",
      "Amazon SQS",
      "AWS Kinesis",
      "RestAPI",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "패키지 여행 어드민",
    "description": {
      "summary": "기존 분산된 관리 도구들을 하나의 통합 시스템으로 일원화하여 운영자 업무 효율성을 개선했습니다. 직관적인 UI/UX와 실시간 데이터 동기화를 통해 정확한 상품/예약 상태 관리가 가능해지고 확장성 및 유지보수성을 확보했습니다.",
      "highlights": [
        "TypeScript + Next.js/React로 SPA 기반 관리자 인터페이스 구축",
        "마이크로서비스들의 REST API 통합",
        "컴포넌트 기반 재사용 가능한 UI 라이브러리 구축",
        "AWS ECS 환경에서 정적 파일 배포 및 CI/CD 파이프라인 구성",
        "컴포넌트 기반 아키텍처로 확장성 및 유지보수성 확보"
      ]
    },
    "from": "2023.08",
    "to": "2024.05",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "TypeScript",
      "Next.js",
      "React",
      "MongoDB",
      "RestAPI",
      "AWS ECS",
      "Terraform",
      "Github Actions",
      "CI/CD",
      "Datadog"
    ]
  },
  {
    "name": "신규패키지 시스템 개발 (1차)",
    "description": {
      "summary": "기존 C# 기반 시스템을 Java SpringBoot로 전환하는 1차 포팅 프로젝트였습니다. 자동화 없이 단순 포팅 위주로 진행하다가 이후 자동화/상품모듈화 방향으로 바뀌면서 중단되었지만, Java와 JPA 기술 학습 경험을 쌓을 수 있었습니다.",
      "highlights": [
        "MySQL과 JPA 기반 데이터 계층 재설계 및 성능 최적화",
        "아키텍처 패턴 적용으로 확장성 및 유지보수성 확보",
        "C# 기반 핵심 기능의 Java로 안정적 포팅",
        "신규 기능 확장을 위한 기반 아키텍처 구축",
        "마이크로서비스 도입을 위한 기반 설계",
        "확장 가능한 도메인 중심 설계 적용"
      ]
    },
    "from": "2023.06",
    "to": "2023.08",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "Java",
      "SpringBoot",
      "MySQL",
      "JPA",
      "RestAPI",
      "HexagonalArchitecture"
    ]
  },
  {
    "name": "현대카드 PLCC 연동",
    "images": ["6.png"],
    "description": {
      "summary": "현대카드와의 제휴를 통해 PLCC 회원들에게 NOL 포인트 서비스를 제공하기 위한 시스템을 구축했습니다. 사내 정산서비스를 통해 현대카드와 연동하고 가입 상태별 메시지 분기 처리, 포인트 사용 제약 등을 구현했습니다.",
      "highlights": [
        "사내 정산서비스 연동을 통한 포인트 처리 자동화",
        "회원 상태별 자동 적립률 적용 로직 구현",
        "NOL 포인트 적립/사용 프로세스 구축",
        "회원 등급별 차별화된 혜택 관리 시스템",
        "포인트 최대 사용 제약 및 연동 처리"
      ]
    },
    "from": "2023.05",
    "to": "2023.06",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "ASP.NET MVC",
      "RestAPI",
      "MSSQL",
      "Jenkins",
      "ELK Stack"
    ]
  },
  {
    "name": "모두투어 패키지 상품 연동",
    "description": {
      "summary": "외부 공급사인 모두투어와의 상품 연동을 통해 상품 선택권을 다양화하고 운영 효율성을 개선했습니다. 수동 상품 등록에서 자동 연동으로 전환하여 실시간 예약 처리가 가능해지고 고객 편의성 및 만족도를 향상시켰습니다.",
      "highlights": [
        "모두투어 API 실시간 연동으로 상품 정보 자동 동기화",
        "예약 생성/취소 API 자동화로 고객 예약 즉시 처리",
        "Windows Batch 기반 상품 데이터 동기화 스케줄링",
        "상품 정보 매핑 로직으로 내부 표준 데이터 구조 변환",
        "데이터 검증 로직으로 상품 정보 정확성 확보",
        "연동 오류 모니터링 및 알림 시스템 구축"
      ]
    },
    "from": "2023.03",
    "to": "2023.04",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "ASP.NET MVC",
      "RestAPI",
      "MSSQL",
      "Windows Batch",
      "Jenkins",
      "ELK Stack"
    ]
  },
  {
    "name": "패키지 여행 상품 메인 개편",
    "images": ["7.png"],
    "description": {
      "summary": "패키지 여행 메인 페이지의 전시 구조를 개선하여 사용자 탐색 편의성을 높이고 운영 관리 효율성을 증대시켰습니다. 통합된 데이터 구조와 API 아키텍처 개선을 통해 향후 기능 추가 용이성을 확보하고 메인 페이지 성능을 향상시켰습니다.",
      "highlights": [
        "C#/Java SpringBoot 기반 통합 API로 데이터 제공 표준화",
        "상품 전시 레이아웃 최적화로 사용자 탐색 편의성 향상",
        "데이터 정합성 검증 로직으로 상품 정보 신뢰성 확보",
        "API 응답 구조 개선으로 프론트엔드 성능 최적화",
        "메인 페이지 로딩 성능 개선",
        "상품 데이터 캐싱 최적화로 응답 속도 개선"
      ]
    },
    "from": "2023.01",
    "to": "2023.02",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "ASP.NET WebAPI",
      "Java",
      "SpringBoot",
      "RestAPI",
      "Github Actions",
      "CI/CD",
      "Jenkins",
      "ELK Stack"
    ]
  },
  {
    "name": "네이버 패키지 상품 연동",
    "images": ["8.png"],
    "description": {
      "summary": "네이버 해외패키지 플랫폼 입점을 통해 판매 채널을 확대하기 위한 상품 연동 시스템을 구축했습니다. 실시간 상품 정보 동기화를 통해 정확한 데이터를 제공하고 상품 노출 최적화를 구현했습니다.",
      "highlights": [
        "네이버 해외패키지 전용 API 연동 구현",
        "실시간 상품 정보 동기화 시스템",
        "네이버 API 규격에 맞춘 데이터 포맷 변환",
        "상품 노출 최적화로 검색 가시성 향상"
      ]
    },
    "from": "2021.11",
    "to": "2022.01",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "RestAPI",
      "MSSQL",
      "Jenkins",
      "ELK Stack"
    ]
  },
  {
    "name": "구패키지 시스템 운영 및 개선",
    "description": {
      "summary": "대용량 예약/결제 시스템의 안정적 운영을 담당하며 지속적인 개선을 통해 서비스 품질을 향상시켰습니다. 담당자 업무 편의 기능을 지속적으로 개발하고 로그 수집 도구들을 활용하여 시스템 운영 효율성을 높였습니다.",
      "highlights": [
        "대용량 예약/결제 시스템 안정적 운영",
        "담당자 업무 편의 기능 지속적 개발",
        "배치 작업 최적화로 데이터 처리 효율성 향상",
        "시스템 성능 모니터링 및 튜닝",
        "Filebeat, Logstash, Elasticsearch, Kibana 활용"
      ]
    },
    "from": "2021.06",
    "to": "2023.06",
    "type": "company",
    "companyName": "noluniverse",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "ASP.NET",
      "Vue.js",
      "Java",
      "MSSQL",
      "IIS",
      "Kafka",
      "Batch",
      "Stored Procedure",
      "Jenkins",
      "Filebeat",
      "Logstash",
      "Elasticsearch",
      "Kibana"
    ]
  },
  {
    "name": "CMS Mobile",
    "images": ["9.png", "10.png", "11.png", "12.png"],
    "description": {
      "summary": "자동 이체 결과나 고객 상담 내역 등을 모바일로 관리할 수 있는 크로스 플랫폼 모바일 앱을 개발했습니다. Xamarin을 활용한 통합 개발로 개발 효율성과 유지보수성을 확보하고 Firebase 푸시 알림으로 실시간 고객 응대를 지원했습니다.",
      "highlights": [
        "Xamarin 기반 Android/iOS 통합 개발",
        "Firebase 푸시 알림으로 실시간 고객 응대 지원",
        "SQLite 로컬 데이터베이스로 데이터 관리",
        "자동 이체 결과 및 고객 상담 내역 모바일 관리",
        "크로스 플랫폼 개발로 유지보수 비용 절감"
      ]
    },
    "from": "2018.04",
    "to": "2021.02",
    "type": "company",
    "companyName": "ksoft",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "Xamarin",
      "Android",
      "iOS",
      "Firebase",
      "SQLite"
    ]
  },
  {
    "name": "AutoCMS (자동 이체 시스템)",
    "images": ["13.png"],
    "description": {
      "summary": "대량 이체 작업의 자동화를 통해 업무 처리 시간을 단축하고 금융기관과의 실시간 연동으로 이체 처리의 정확성과 신뢰성을 확보했습니다. 배치 프로그램 기반 안정적 운영과 체계적인 모니터링을 통해 운영 리소스를 절감했습니다.",
      "highlights": [
        "금융기관 API 실시간 연동으로 정확한 이체 처리",
        "대량 이체 작업 자동화 시스템",
        "Windows 콘솔 기반 배치 프로그램으로 안정적 운영",
        "이체 결과 모니터링으로 처리 상태 실시간 추적",
        "오류 처리 및 재시도 로직으로 처리 신뢰성 확보"
      ]
    },
    "from": "2018.04",
    "to": "2021.02",
    "type": "company",
    "companyName": "ksoft",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "Windows Console",
      "MSSQL"
    ]
  },
  {
    "name": "CRM 시스템",
    "description": {
      "summary": "통합 고객 관리를 위한 데스크톱/웹 애플리케이션을 개발했습니다. WPF와 ASP.NET으로 크로스 플랫폼을 지원하고 SignalR 실시간 알림을 통해 고객 응대 신속성을 확보했습니다.",
      "highlights": [
        "WPF 기반 데스크톱과 ASP.NET 웹 플랫폼 통합 개발",
        "SignalR 실시간 알림으로 고객 응대 신속성 확보",
        "DevExpress 컴포넌트 활용한 UI 구현",
        "크로스 플랫폼 지원으로 업무 접근성 향상"
      ]
    },
    "from": "2018.04",
    "to": "2021.02",
    "type": "company",
    "companyName": "ksoft",
    "link": null,
    "linkVisible": false,
    "skills": [
      "C#",
      "WPF",
      "DevExpress",
      "ASP.NET",
      "SignalR",
      "MSSQL"
    ]
  }
]